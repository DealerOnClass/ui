//
//  Framework Grid Generation
//
//  Used only by Bootstrap to generate the correct number of grid classes given
//  any value of `$grid__columns`.
@mixin make-grid-columns($i: 1, $list: ".col-xxs-#{$i}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
    @for $i from (1 + 1) through $grid__columns {
        $list: "#{$list}, .col-xxs-#{$i}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
    }

    #{$list} {
        position: relative;
        //  Prevent columns from collapsing when empty
        min-height: 1px;
        //  Inner gutter via padding
        padding-left: $global__gutter;
        padding-right: $global__gutter;
    }
}

@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}") {
    @for $i from (1 + 1) through $grid__columns {
        $list: "#{$list}, .col-#{$class}-#{$i}";
    }

    #{$list} {
        float: left;
    }
}

@mixin calc-grid-column($index, $class, $type) {
    @if ($type == width) and ($index > 0) {
        .col-#{$class}-#{$index} {
            width: percentage(($index / $grid__columns));
        }
    }
    @if ($type == push) and ($index > 0) {
        .col-#{$class}-push-#{$index} {
            left: percentage(($index / $grid__columns));
        }
    }
    @if ($type == push) and ($index == 0) {
        .col-#{$class}-push-0 {
            left: auto;
        }
    }
    @if ($type == pull) and ($index > 0) {
        .col-#{$class}-pull-#{$index} {
            right: percentage(($index / $grid__columns));
        }
    }
    @if ($type == pull) and ($index == 0) {
        .col-#{$class}-pull-0 {
            right: auto;
        }
    }
    @if ($type == offset) {
        .col-#{$class}-offset-#{$index} {
            margin-left: percentage(($index / $grid__columns));
        }
    }
}

@mixin loop-grid-columns($columns, $class, $type) {
    @for $i from 0 through $columns {
        @include calc-grid-column($i, $class, $type);
    }
}

@mixin make-grid($class) {
    @include float-grid-columns($class);
    @include loop-grid-columns($grid__columns, $class, width);
    @if $grid__has__pull { @include loop-grid-columns($grid__columns, $class, pull); }
    @if $grid__has__push { @include loop-grid-columns($grid__columns, $class, push); }
    @if $grid__has__offset { @include loop-grid-columns($grid__columns, $class, offset); }
}

//
//  Grid System
//
//  Generate semantic grid columns with these mixins.
//  Centered container element
@mixin container-fixed($gutter: $global__gutter) {
    margin-right: auto;
    margin-left: auto;
    padding-left: $global__gutter;
    padding-right: $global__gutter;
    max-width: 100%;
    @include clearfix;
}

//  Creates a wrapper for a series of columns
@mixin make-row($gutter: $global__gutter) {
    margin-left: negative($global__gutter);
    margin-right: negative($global__gutter);
    @include clearfix;
}

//
//  //  Generate the extra extra small columns
//  @mixin make-xxs-column($columns, $gutter: $global__gutter) {
//      position: relative;
//      min-height: 1px;
//      padding-left:  ($gutter / 2);
//      padding-right: ($gutter / 2);
//      float: left;
//      width: percentage(($columns / $grid__columns));
//  }
//  @mixin make-xxs-column-offset($columns) {
//      margin-left: percentage(($columns / $grid__columns));
//  }
//  @mixin make-xxs-column-push($columns) {
//      left: percentage(($columns / $grid__columns));
//  }
//  @mixin make-xxs-column-pull($columns) {
//      right: percentage(($columns / $grid__columns));
//  }

//
//  //  Generate the extra small columns
//  @mixin make-xs-column($columns, $gutter: $global__gutter) {
//      position: relative;
//      min-height: 1px;
//      padding-left:  ($gutter / 2);
//      padding-right: ($gutter / 2);
//      @media (min-width: $screen-xs-min) {
//          float: left;
//          width: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-xs-column-offset($columns) {
//      @media (min-width: $screen-xs-min) {
//          margin-left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-xs-column-push($columns) {
//      @media (min-width: $screen-xs-min) {
//          left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-xs-column-pull($columns) {
//      @media (min-width: $screen-xs-min) {
//          right: percentage(($columns / $grid__columns));
//      }
//  }

//
//  //  Generate the small columns
//  @mixin make-sm-column($columns, $gutter: $global__gutter) {
//      position: relative;
//      min-height: 1px;
//      padding-left:  ($gutter / 2);
//      padding-right: ($gutter / 2);
//
//      @media (min-width: $screen-sm-min) {
//          float: left;
//          width: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-sm-column-offset($columns) {
//      @media (min-width: $screen-sm-min) {
//          margin-left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-sm-column-push($columns) {
//      @media (min-width: $screen-sm-min) {
//          left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-sm-column-pull($columns) {
//      @media (min-width: $screen-sm-min) {
//          right: percentage(($columns / $grid__columns));
//      }
//  }

//
//  //  Generate the medium columns
//  @mixin make-md-column($columns, $gutter: $global__gutter) {
//      position: relative;
//      min-height: 1px;
//      padding-left:  ($gutter / 2);
//      padding-right: ($gutter / 2);
//
//      @media (min-width: $screen-md-min) {
//          float: left;
//          width: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-md-column-offset($columns) {
//      @media (min-width: $screen-md-min) {
//          margin-left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-md-column-push($columns) {
//      @media (min-width: $screen-md-min) {
//          left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-md-column-pull($columns) {
//      @media (min-width: $screen-md-min) {
//          right: percentage(($columns / $grid__columns));
//      }
//  }

//
//  //  Generate the large columns
//  @mixin make-lg-column($columns, $gutter: $global__gutter) {
//      position: relative;
//      min-height: 1px;
//      padding-left:  ($gutter / 2);
//      padding-right: ($gutter / 2);
//
//      @media (min-width: $screen-lg-min) {
//          float: left;
//          width: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-lg-column-offset($columns) {
//      @media (min-width: $screen-lg-min) {
//          margin-left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-lg-column-push($columns) {
//      @media (min-width: $screen-lg-min) {
//          left: percentage(($columns / $grid__columns));
//      }
//  }
//  @mixin make-lg-column-pull($columns) {
//      @media (min-width: $screen-lg-min) {
//          right: percentage(($columns / $grid__columns));
//      }
//  }


